{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 run:\
(	: List start\
define	: Reserved word.\
deriv	: Word\
(	: List start\
lambda	: Reserved word.\
(	: List start\
poly	: Word\
var	: Word\
)	: List end\
(	: List start\
let*	: Reserved word.\
(	: List start\
(	: List start\
terms	: Word\
(	: List start\
terminize	: Word\
poly	: Word\
)	: List end\
)	: List end\
(	: List start\
deriv-term	: Word\
(	: List start\
lambda	: Reserved word.\
(	: List start\
term	: Word\
)	: List end\
(	: List start\
cond	: Reserved word.\
(	: List start\
(	: List start\
null?	: Word\
term	: Word\
)	: List end\
'	: Reserved word.\
(	: List start\
)	: List end\
)	: List end\
(	: List start\
(	: List start\
not	: Reserved word.\
(	: List start\
member?	: Word\
var	: Word\
term	: Word\
)	: List end\
)	: List end\
'	: Reserved word.\
(	: List start\
0	: Number\
)	: List end\
)	: List end\
(	: List start\
(	: List start\
not	: Reserved word.\
(	: List start\
member?	: Word\
'	: Reserved word.\
term	: Word\
)	: List end\
)	: List end\
(	: List start\
upto	: Word\
var	: Word\
term	: Word\
)	: List end\
)	: List end\
(	: List start\
else	: Reserved word.\
(	: List start\
deriv-term-expo	: Word\
term	: Word\
var	: Word\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
(	: List start\
diff	: Word\
(	: List start\
map	: Word\
deriv-term	: Word\
terms	: Word\
)	: List end\
)	: List end\
)	: List end\
(	: List start\
remove-trailing-plus	: Word\
(	: List start\
polyize	: Word\
diff	: Word\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
(	: List start\
define	: Reserved word.\
terminize	: Word\
(	: List start\
lambda	: Reserved word.\
(	: List start\
poly	: Word\
)	: List end\
(	: List start\
cond	: Reserved word.\
(	: List start\
(	: List start\
null?	: Word\
poly	: Word\
)	: List end\
'	: Reserved word.\
(	: List start\
)	: List end\
)	: List end\
(	: List start\
else	: Reserved word.\
(	: List start\
cons	: Word\
(	: List start\
upto	: Word\
'	: Reserved word.\
poly	: Word\
)	: List end\
(	: List start\
terminize	: Word\
(	: List start\
after	: Word\
'	: Reserved word.\
poly	: Word\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
)	: List end\
\
********PRINTING SYMBOL TABLE********\
^\
deriv\
deriv-term\
deriv-term-expo\
diff\
map\
member?\
null?\
poly\
polyize\
remove-trailing-plus\
term\
terminize\
terms\
upto\
var\
\
********PRINTING TREE********\
\
(define deriv \
	(lambda \
	(poly var)\
	(let* \
	(\
	(terms \
	(terminize poly))\
	(deriv-term \
	(lambda \
	(term)\
	(cond \
	(\
	(null? term)' () )\
	(\
	(not \
	(member? var term))' \
	(0))\
	(\
	(not \
	(member? ' ^ term))\
	(upto var term))\
	(else \
	(deriv-term-expo term var)))))\
	(diff \
	(map deriv-term terms)))\
	(remove-trailing-plus \
	(polyize diff)))))\
********PRINTING SYMBOL TABLE********\
+\
^\
after\
cons\
deriv\
deriv-term\
deriv-term-expo\
diff\
map\
member?\
null?\
poly\
polyize\
remove-trailing-plus\
term\
terminize\
terms\
upto\
var\
\
********PRINTING TREE********\
\
(define terminize \
	(lambda \
	(poly)\
	(cond \
	(\
	(null? poly)' () )\
	(else \
	(cons \
	(upto ' + poly)\
	(terminize \
	(after ' + poly)))))))BUILD SUCCESSFUL (total time: 0 seconds)\
}